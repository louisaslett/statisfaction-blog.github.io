---
title: "Quantum workers in Bernoulli factories"
author: "RÃ©mi Bardenet"
date: "2023-11-01"
categories: [quantum computing, simulation]
---
TL;DR: A quantum computer lets you provably build more general Bernoulli factories than your laptop. 

I have grown an interest for quantum computing, both for fun and because it naturally applies to sampling my favourite distribution, [determinantal point processes](https://arxiv.org/abs/2305.15851).
One of the natural (and still quite open) big questions in quantum computing is, for a given computational task such as solving a linear system, whether having access to a quantum computer gives you any *advantage* over using your laptop in the smartest way possible.
Maybe the quantum computer lets you solve part of your problem faster, or maybe it allows you to solve a more general class of problems.
[Dale, Jennings, and Rudolph (2015)](https://www.nature.com/articles/ncomms9203) prove a quantum advantage of the latter kind, for a task that appeals to a computational statistician: a quantum computer gives you access to strictly more Bernoulli factories than your laptop does.
In this post, I discuss one of their examples.

## Bernoulli factories

First, I need to define what a Bernoulli factory is.
Loosely speaking, a Bernoulli factory is an algorithm that, when fed with i.i.d draws from a Bernoulli random variable $B(p)$ with unknown parameter $p$, outputs a stream of independent Bernoullis with parameter $f(p)$.
The algorithm does not have access to the value of $p$, and needs to work for as large a range of values of $p$ as possible.
For instance, a trick attributed to von Neumann gives you a Bernoulli factory for the constant function $f\equiv 1/2$, can you guess how? If you have never seen this trick, take a break and think about it. Here is a hint: try to pair Bernoulli draws and define two events of equal probability.

The problem of determining what Bernoulli factories can be constructed on a *classical* (as opposed to *quantum*) computer has been answered by [Keane and O'Brien (1994)](https://dl.acm.org/doi/10.1145/175007.175019).
Essentially, it is necessary and sufficient that $(i)$ $f$ be continuous on its domain $\mathcal{P}$, and that $(ii)$ either $f$ is constant or there exists an integer $n$ such that, for all $p\in\mathcal{P}$,
$$
    \min[ f(p), 1-f(p)] \geq \min [ p^n, (1-p)^n ].
$$
In particular, a non-constant $f$ should not take the values $0$ or $1$ in $(0,1)$, and cannot approach these extreme values too fast.
In particular, the doubling function $f_\mathrm{double}:p\mapsto 2p$ defined on $[0,1/2]$ does not correspond to a Bernoulli factory, while its restriction to $[0,1/2-\epsilon]$ does, for any $\epsilon>0$. 
Another simple example is $f_\mathrm{quadratic}:p\mapsto 4p(1-p)$ defined on $[0,1]$, which does not correspond to a Bernoulli factory.
We now show that $h$ can be realized simply on a quantum computer. 

## Quantum computers and quantum coins
Now buckle up, because I need to define a mathematical model for a quantum computer. 
This model only requires basic algebra, albeit with strange notation.
Let $N$ be a positive integer, and 
$$
    \mathbb{H} = (\mathbb{C}^2)^{\otimes N} = \mathbb{C}^2\otimes \dots \otimes \mathbb{C}^2,
$$ 
where the tensor product is taken $N$ times.
An $N$-qubit quantum computer is a machine that, when fed with 

1. a linear operator $\rho$ on the Hilbert space $\mathbb{H}$, with trace norm $1$ (the *state*),
2. a Hermitian operator $A$ on $\mathbb{C}^2\otimes \mathbb{C}^2$ (the *observable*), 
   
outputs a draw from the random variable $X_{A,\rho}$, with support the spectrum of $A$, defined by 
$$
    \mathbb{E} g(X_{A,\rho}) = \mathrm{Tr}(\rho g(A)), \quad g:\mathbb{H}\rightarrow \mathbb{R}_+.
$${#eq-born}
Here $g(A)$ is the operator that has the same eigenvectors as $A$, but where each eigenvalue $\lambda$ is replaced by $g(\lambda)$.
We give two examples.

_The quantum coin._
Consider a one-qubit computer, i.e. $N=1$. 
Then $\mathbb{H} = \mathbb{C}^2$ has dimension $2$, and we fix an orthonormal basis, which we denote by $(\ket{0}, \ket{1})$.
The strange notation $\ket{\cdot}$ is inherited from physics, and is very practical in computations, as you will see. 
The basic idea is that a vector in $\mathbb{H}$ is written $\ket{v}$ (a *ket*), and the linear form associated to $\ket{v}\in\mathbb{H}$ by Riesz's theorem is denoted by $\bra{v}$ (a *bra*). 
If we denote by $\braket{\cdot\vert\cdot}$ (a *bra-ket*, or *bracket*, hence the name) the inner product in $\mathbb{H}$, then by definition 
$$
    \bra{v}: \ket{u} \mapsto \braket{v\vert u},
$$
so that the notation for vectors and linear forms is consistent with the Hilbert structure.
Now, remember we have fixed a basis $(\ket{0}, \ket{1})$ of $\mathbb{H}$; for $p\in[0,1]$, we define
$$
    \ket{p} = \sqrt{p} \ket{0} + \sqrt{1-p}\ket{1}.
$$
This definition is consistent with earlier notation, as $\ket{p} = \ket{0}$ when $p=0$, for instance. 
Now, we define a quantum coin as the state $\rho_{\mathrm{qc}} = \ket{p}\bra{p}$.
It is the projection onto $\mathbb{C}\ket{p}$, and in particular it is a linear operator of trace $1$, and hence a valid state.
As observable, we take the projection $\ket{1}\bra{1}$ onto the second vector of the basis. 
What random variable $X_{\ket{1}\bra{1}, \rho_{\mathrm{qc}}$ does this state-observable pair define in @eq-born? Well, the spectrum of the observable is $\{0,1\}$, so we have defined a Bernoulli random variable, and the probability that it is equal to $1$ is 
$$
    \mathrm{Tr}\left[ \ket{1}\bra{1} \ket{p}\bra{p}  \right] = \vert \bra{1}\ket{p}\vert^2 = p.
$$
by cyclicity of the trace. 
All of this to define a $B(p)$ variable!
Things get more puzzling when you try to create two dependent Bernoulli variables.

_Two quantum coins._
Consider now a computer with two qubits, so that the Hilbert space is $\mathbb{H}=\mathbb{C}^2\otimes\mathbb{C}^2$. 
From our orthonormal basis $(\ket{0}, \ket{1})$ of $\mathbb{C}^2$, we can build an orthonormal basis $(\ket{i}\otimes\ket{j}, i,j\in\{0,1\})$ of $\mathbb{H}$. 
To keep expressions short, it is customary to write $\ket{i}\otimes\ket{j}$ as $\ket{ij}$. 
To define a pair of quantum coins, we now consider the tensor product of two quantum coins,
$$
    \ket{p}\otimes \ket{p} = p \ket{00} + \sqrt{p(1-p)}\ket{01} + \sqrt{p(1-p)}\ket{10}+ p \ket{11}.
$$
The corresponding state $\rho_{2\mathrm{qc}} = (\ket{p}\otimes \ket{p})(\bra{p}\otimes \bra{p})$ is a sum of sixteen terms, which we define as two quantum coins.
Now consider for your observable an operator $B$ with four distinct eigenvalues, say $\lambda_{ij} \in\mathbb{C}$ for $i, j\in\{0,1\}$, each corresponding to eigenvector $\ket{ij}$.
The random variable $X = X_{B, \rho_{2\mathrm{qc}}}$, associated through @eq-born to two quantum coins and our newly defined observable, has support $\{\lambda_{00}, \lambda_{01}, \lambda_{10}, \lambda_{11}\}$, and 
$$
    \mathbb{P}(X = \lambda_{ij}) = \mathrm{Tr}\left[(\ket{p}\otimes \ket{p})(\bra{p}\otimes \bra{p}) \ket{ij}\bra{ij}\right] = p^{1-i}(1-p)^i \times p^{1-j}(1-p)^j, 
$$
again by cyclicity of the trace and then carefully distributing our multiplication.
Otherly put, the indices of $X$ are a pair of independent Bernoullis with equal paramater $p$. 
Again, this might feel like a lot of algebraic pain for no gain. 
But wait for it.
What if we had taken the same state, but with another observable? Say the observable with four distinct eigenvalues $\lambda_{\phi^+}, \lambda_{\phi-}, \lambda_{\psi+}, \lambda_{\psi-}\in \mathbb{C}$, and corresponding eigenvectors
$$
    \ket{\phi^{\pm}} = \frac{\ket{00}\pm\ket{11}}{\sqrt{2}}, \quad
    \ket{\psi^{\pm}} = \frac{\ket{01}\pm\ket{10}}{\sqrt{2}}.
$$
Then, the random variable $X = X_{C, \rho_{2\mathrm{qc}}}$ defined by Born's rule in @eq-born has support $\{\lambda_{\phi^+}, \lambda_{\phi-}, \lambda_{\psi+}, \lambda_{\psi-}\}$, and is given by 
$$
    \mathbb{P}(X = \phi^+) = \mathrm{Tr\left[ \rho_{2\mathrm{qc}} \ket{\phi^+}\bra{\ket{\phi^+}} \right]} = 
$$


## Quantum Bernoulli factories
We first need some equivalent of a Bernoulli random variable. 
Consider an orthonormal basis $(e_0, e_1)$ of $\mathbb{C}^2$. 
A natural candidate is the orthogonal projector $\Pi_p:\mathbb{C}^2\rightarrow \mathbb{C}^2$ onto 
$$
    \sqrt{1-p}e_0 + \sqrt{p}e_1
$$
Indeed, $\Pi_p$ together with the observable $\Pi_0 + \Pi_1$ onto $e_0$ as observable define through @eq-born a binary random variable $X$ such that 
$$
    \mathbb P (X=1) = \mathrm{Tr}[ \Pi_p \Pi_1 ] = p = 1 - \mathbb P (X=0).
$$

A quantum Bernoulli factory will be defined as an algorithm that takes $f$ and its domain as input, and outputs a number of qubits $N$, a state-observable pair $(\rho, A)$ on $(\mathbb{C}^2)^{\otiems N}$, and a function $h$ such that $h(X_{A,\rho})\sim \mathrm{Ber}(f(p))$.

so that $(e_i\otimes e_j)_{0\leq i,j, \leq 1}$ gives a basis of $\mathbb{H}$.
Actually, I will need to independent Bernoulli draws to realize $f_\mathrm{quadratic}$, so I directly define the equivalent of two independent Bernoulli draws. 
This is the state $v_p\in\mathbb{C^2}$ defined by
$$
   
$$
It does represent our pair of Bernoulli draws in the following sense. 
If I feed my computer if you take your state $v_p$ and the observable 